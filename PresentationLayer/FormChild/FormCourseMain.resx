<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>